---
import BaseLayout from "@layouts/BaseLayout.astro";
import Entry from "@components/blog/Entry.astro";
import Paginator from "@components/Paginator.astro";

import { type Frontmatter } from "@utils/types.ts";
import { getCollection } from "astro:content";
import { type Page } from "astro";
export interface Props {
  page: Page;
}
export async function getStaticPaths({ paginate }) {
  let posts = await getCollection(
    "blog",
    (post) => (post.data.published && post.body) || import.meta.env.DEV,
  );
  posts = posts.sort((a, b) => b.data.date.valueOf() - a.data.date.valueOf());

  return paginate(posts, { pageSize: 3 });
}

const frontmatter = {
  title: "glog",
  description: "Every developer needs an abandoned blog, and this one is mine.",
  date: new Date("2020-02-10"),
  updated: new Date("2024-09-19"),
} as Frontmatter;

const { page } = Astro.props;
---

<BaseLayout frontmatter={frontmatter}>
  {
    page.data.map((post, index) => {
      return (
        <div>
          {index !== 0 && <br />}
          <Entry post={post} />
        </div>
      );
    })
  }

  <Paginator page={page} />
</BaseLayout>

<style>
  .hook {
    padding: var(--halfpad);
    padding-bottom: 1rem;
  }
</style>
