---
import BaseLayout from "@layouts/BaseLayout.astro";
import { formatDate } from "@utils/utils";
import { getCollection } from "astro:content";
import { marked } from "marked";

export async function getStaticPaths() {
  let blogs = await getCollection("blog");
  blogs = blogs.filter((entry) => entry.data.published);
  return blogs.map((entry) => ({
    params: { slug: entry.slug },
    props: { entry },
  }));
}

const { entry } = Astro.props;
const { title, description, date, image, imageAlt, updated, published } =
  entry.data;

const renderedDesc = marked.parse(description);
const { Content } = await entry.render();
---

<BaseLayout frontmatter={entry.data}>
  <header>
    <span class="time">
      <time datetime={date.toISOString()} class="date">{formatDate(date)}</time>
      {
        updated && (
          <time datetime={updated.toISOString()} class="updated">
            updated {formatDate(updated)}
          </time>
        )
      }
    </span>
    <h1>{title}</h1>
    <!-- <div class="desc" set:html={renderedDesc} /> -->
    <!-- <hr /> -->
  </header>
  <Content />
</BaseLayout>

<style>
  header {
    position: relative;
    /* text-align: center; */
  }

  header h1 {
  }

  header .time {
    position: absolute;
    top: -1.5rem;

    color: var(--text-soft);
    font-size: var(--small-font);
  }

  header .updated {
    padding-left: var(--pad);
  }

  header .desc {
    /* position: absolute; */
    /* left: 0; */
    /* top: 1.5rem; */
    /* padding-left: 1rem; */
    /* font-size: 0.8rem; */
    /* text-align: center; */
  }

  header hr {
    min-width: 100px;
    width: 30%;
  }
</style>
