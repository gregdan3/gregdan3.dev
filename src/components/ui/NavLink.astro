---
export interface Props {
  name?: string;
  href: string;
  icon?: string;
  tooltip?: string;
  left?: boolean;
}
import FixedIcon from "@components/ui/FixedIcon.astro";

let { name, href, icon, tooltip, left = true } = Astro.props;

function getBasePath(pathname: string): string {
  const segments = pathname.split("/").filter(Boolean);
  if (segments.length > 0) {
    return `/${segments[0]}`;
  }
  return "/";
}

const currentPath = getBasePath(Astro.url.pathname);
const current = href === currentPath;
const external = href[0] !== "/";
---

<a href={href} rel="dofollow" target={external ? "_blank" : null}>
  {icon && left ? <FixedIcon name={icon} inline={true} /> : null}
  {name && <span class={current ? "current" : null}>{name}</span>}
  {icon && !left ? <FixedIcon name={icon} inline={true} /> : null}
</a>

<style>
  a:hover {
    background-color: var(--highlight);
  }

  a {
    display: block;
    padding: var(--halfpad);
    text-decoration: none;
    color: var(--url);
    font-size: var(--big-font);

    border: 1px solid var(--border-hard);
    padding: var(--pad);
    margin: var(--block-mark);
    border-radius: var(--block-mark);
    box-shadow: var(--raise-shadow);
  }
  a:visited {
    color: var(--urlvisited);
  }

  /* only target text */
  a:hover span {
    text-decoration: underline dotted 1px;
  }

  .current {
    text-decoration: underline;
  }
  span {
    whitespace: nowrap;
  }

  @media (min-width: 768px) {
    a {
      font-size: inherit;
      padding: var(--block-mark);
      border: none;
      background-color: none;
      box-shadow: none;
    }
  }
</style>
