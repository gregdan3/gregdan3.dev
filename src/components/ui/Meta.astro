---
import "@styles/style.css";

import { type Frontmatter } from "@utils/types.ts";
import { ViewTransitions } from "astro:transitions";
import { fetchImage } from "@utils/utils.ts";

export interface Props {
  frontmatter: Frontmatter;
  site_name: string;
  locale?: string;
}

const { frontmatter, site_name, locale = "en_US" } = Astro.props;
const { title, description, image } = frontmatter;

import AvatarImage from "@data/images/avatar_s.png";
const usedImage = await fetchImage(image, AvatarImage);

let fullTitle = `${title} | ${site_name}`;
if (!title) {
  fullTitle = site_name;
}

const hostname = Astro.url.hostname;
const url = Astro.url;
---

<!-- Global Metadata -->
<meta charset="utf-8" />
<meta name="viewport" content="width=device-width, initial-scale=1.0" />
<link rel="icon" type="image/x-icon" href="/favicon.ico" />
<link
  rel="alternate"
  type="application/rss+xml"
  title=`RSS Feed for ${hostname}`
  href="/rss.xml"
/>
<link
  rel="sitemap"
  type="application/xml"
  title="sitemap"
  href="/sitemap-index.xml"
/>

<!-- Primary Meta Tags -->
<title>{fullTitle}</title>
<meta name="title" content={fullTitle} />
<meta name="description" content={description} />

<!-- Open Graph / Facebook -->
<meta property="og:title" content={fullTitle} />
<meta property="og:type" content="website" />
{usedImage && <meta property="og:image" content={usedImage.src} />}
<meta property="og:url" content={url} />
<meta property="og:description" content={description} />
<meta property="og:locale" content={locale} />
<meta property="og:site_name" content={site_name} />
<script async is:inline>
  // @ts-expect-error: we are assigning window.goatcounter
  window.goatcounter = { no_onload: true };
</script>
<!-- https specified because otherwise i fail cross-origin -->
<script
  data-goatcounter="https://gregdan3.goatcounter.com/count"
  async
  src="https://gc.zgo.at/count.js"
  is:inline></script>

<ViewTransitions />

<script>
  // NOTE: only runs on completed loading, but fires for first time load and transitions
  document.addEventListener("astro:page-load", function () {
    const path = location.pathname + location.search + location.hash;
    var attempts = 0;
    const maxAttempts = 50;

    function count() {
      // @ts-expect-error: it will exist
      if (window.goatcounter && window.goatcounter.count) {
        clearInterval(t);
        // @ts-expect-error: it does exist
        window.goatcounter.count({
          path: path,
          title: document.title,
          referrer: document.referrer,
        });
      } else if (attempts >= maxAttempts) {
        clearInterval(t);
      }
    }

    var t = setInterval(function () {
      attempts++;
      count();
    }, 100);
  });
</script>
