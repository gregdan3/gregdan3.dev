---
import "@styles/style.css";

import { type Frontmatter } from "@utils/types.ts";
import { ViewTransitions } from "astro:transitions";
import { fetchImage } from "@utils/utils.ts";

export interface Props {
  frontmatter: Frontmatter;
  site_name: string;
  locale?: string;
}

const { frontmatter, site_name, locale = "en_US" } = Astro.props;
const { title, description, image } = frontmatter;

import AvatarImage from "@data/images/avatar_s.png";
const usedImage = await fetchImage(image, AvatarImage);

let fullTitle = `${title} | ${site_name}`;
if (!title) {
  fullTitle = site_name;
}

const hostname = Astro.url.hostname;
const url = Astro.url;
---

<!-- Global Metadata -->
<meta charset="utf-8" />
<meta name="viewport" content="width=device-width, initial-scale=1.0" />
<link rel="icon" type="image/x-icon" href="/favicon.ico" />
<link
  rel="alternate"
  type="application/rss+xml"
  title=`RSS Feed for ${hostname}`
  href="/rss.xml"
/>
<link
  rel="sitemap"
  type="application/xml"
  title="sitemap"
  href="/sitemap-index.xml"
/>

<!-- Primary Meta Tags -->
<title>{fullTitle}</title>
<meta name="title" content={fullTitle} />
<meta name="description" content={description} />

<!-- Open Graph / Facebook -->
<meta property="og:title" content={fullTitle} />
<meta property="og:type" content="website" />
{usedImage && <meta property="og:image" content={usedImage.src} />}
<meta property="og:url" content={url} />
<meta property="og:description" content={description} />
<meta property="og:locale" content={locale} />
<meta property="og:site_name" content={site_name} />

<ViewTransitions />

<script>
  import { goatcounterEndpoint } from "@utils/consts.ts";
  import { initialize, count, getGoatcounter } from "goatcounter-js";

  initialize({
    scriptVersion: 4,
    endpointUrl: goatcounterEndpoint,
    settings: { no_onload: true, allow_local: true },
  });

  const location = window.location;
  const goatcounter = await getGoatcounter();
  // @ts-expect-error: GoatCounter is defined without .endpoint but the script checks it
  goatcounter.endpoint = goatcounterEndpoint;
  // idk why but endpoint is inaccessible after first load
  // maybe caused by astro's processing

  let prevPage: string | null = null;
  document.addEventListener("astro:page-load", async () => {
    // should fire for both client-side and server-side navigation
    if (location.href == prevPage) {
      return;
    }
    prevPage = location.href;

    const path = location.pathname + location.search + location.hash;

    await count({
      path: path,
      title: document.title,
      referrer: document.referrer,
    });
  });
</script>
