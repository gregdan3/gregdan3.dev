---
import { marked } from "marked";
import Avatar from "@components/ui/Avatar.astro";
import Date from "@components/blog/Date.astro";
import { fetchImage } from "@utils/utils.ts";
import type { CollectionEntry } from "astro:content";

export interface Props {
  post: CollectionEntry<"blog">;
}

const { post } = Astro.props;
console.log(post);

const link = `/${post.collection}/${post.slug}`;

const usedImage = await fetchImage(post.data.image);

const renderedDesc = post.data.description
  ? marked.parse(post.data.description)
  : null;
---

<div class="entry">
  <div class="info">
    <a href={link}>{post.data.title}</a>
    <Date
      date={post.data.date}
      updated={post.data.updated}
      tooltipSide="right"
    />
    {renderedDesc && <blockquote class="desc" set:html={renderedDesc} />}

    {
      post.data.published ? null : (
        <div style="color: red; font-size: 1.5em; position: absolute; right: 0; top: 0;">
          DRAFT
        </div>
      )
    }
    <!-- <div class="preview"></div> -->
  </div>
  <!-- <div class="img"> -->
  <!--   {usedImage ? <Avatar image={usedImage} alt={imageAlt!} /> : null} -->
  <!-- </div> -->
</div>

<style>
  .entry {
    display: flex;
    position: relative;
    /* border: 1px solid black; */
    /* position: relative; */
    /* margin: auto; */
  }
  .img {
    width: 3.8rem;
    height: 3.8rem;
    margin-left: auto;
    padding: var(--halfpad);
  }
  .desc {
    font-size: var(--small-font);
    padding: var(--block-mark);
    margin: var(--block-mark);
    margin-left: 0;
  }
  a {
    display: block;
    font-size: 1.2em;
    font-weight: 600;
    margin-bottom: -0.25rem;
  }
</style>
