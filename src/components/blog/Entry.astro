---
import { marked } from "marked";
import Avatar from "@components/ui/Avatar.astro";
import Date from "@components/blog/Date.astro";
import { fetchImage } from "@utils/utils.ts";
import type { CollectionEntry } from "astro:content";

export interface Props {
  post: CollectionEntry<"blog">;
}

const { post } = Astro.props;

const link = `/${post.collection}/${post.slug}`;

const usedImage = await fetchImage(post.data.image);

const renderedDesc = post.data.description
  ? marked.parse(post.data.description)
  : null;

import { clipArticle } from "@utils/utils.ts";
// const content = await post.render();
// console.log(content);

const clippedArticle = clipArticle(post.body, 150);
const renderedArticle = marked.parse(clippedArticle);
---

<div class="entry">
  <div class="info">
    <a class="link" href={link}>{post.data.title}</a>
    <Date
      dateText=""
      date={post.data.date}
      updated={post.data.updated}
      tooltipSide="right"
    />
    {renderedDesc && <blockquote class="desc" set:html={renderedDesc} />}

    {
      post.data.published ? null : (
        <div style="color: red; font-size: 1.5em; position: absolute; right: 0; top: 0;">
          DRAFT
        </div>
      )
    }
  </div>
  <div class="preview">
    <div class="preview-body" set:html={renderedArticle} />
    <a class="cover" href={link}></a>
  </div>
  <!-- <div class="img"> -->
  <!--   {usedImage ? <Avatar image={usedImage} alt={imageAlt!} /> : null} -->
  <!-- </div> -->
</div>

<style>
  .entry {
    position: relative;
  }
  /* .img { */
  /*   width: 3.8rem; */
  /*   height: 3.8rem; */
  /*   margin-left: auto; */
  /*   padding: var(--halfpad); */
  /* } */
  .desc {
    font-size: var(--small-font);
    padding: var(--block-mark);
    margin: var(--halfpad);
    margin-top: 0;
  }
  .link {
    display: block;
    font-size: var(--big-font);
    font-weight: 600;
    margin-bottom: -0.25rem;
  }

  .preview {
    position: relative;
  }
  .preview-body {
    mask-image: linear-gradient(to bottom, black 40%, transparent 95%);
    height: 18rem;
    overflow: hidden;
  }
  .cover {
    position: absolute;
    top: 0;
    z-index: 10;
    /* background-color: #ffffff22; */
    height: 18rem;
    width: 100%;
  }
  .cover:hover {
    background-color: inherit;
  }
</style>
