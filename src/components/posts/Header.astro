---
import { marked } from "marked";
import Date from "@components/posts/Date.astro";
import Tag from "@components/posts/Tag.astro";
import IconLink from "@components/ui/IconLink.astro";
import { fetchImage } from "@utils/utils.ts";
import type { CollectionEntry } from "astro:content";

export interface Props {
  post: CollectionEntry<"blog"> | CollectionEntry<"projects">;
  link?: boolean;
  desc?: boolean;
}

const { post, desc = true, link = false } = Astro.props;

const href = `/${post.collection}/${post.slug}`;

const usedImage = await fetchImage(post.data.image);

const renderedDesc = post.data.description
  ? marked.parse(post.data.description)
  : null;
---

<header>
  <div class="heading">
    {
      usedImage ? (
        <img
          src={usedImage.src}
          alt={post.data.imageAlt ? post.data.imageAlt : null}
        />
      ) : null
    }

    {
      link && post.body ? (
        <a class="title" href={href}>
          {post.data.title}
        </a>
      ) : (
        <span class="title">{post.data.title}</span>
      )
    }
  </div>

  <div class="icons">
    {
      post.data.blog && (
        <IconLink icon="mingcute:document-line" href={post.data.blog} />
      )
    }
    {
      post.data.repo && (
        <IconLink icon="mingcute:code-line" href={post.data.repo} />
      )
    }
  </div>

  <Date
    dateText=""
    date={post.data.date}
    updated={post.data.updated}
    tooltipSide="right"
  />
  <!-- {desc && renderedDesc && <blockquote class="desc" set:html={renderedDesc} />} -->

  {
    !post.data.published && (
      <div style="color: red; font-size: 1.5em; position: absolute; right: 0; top: 0;">
        DRAFT
      </div>
    )
  }

  <div class="tags">
    {
      post.data.tags &&
        post.data.tags.map((tag, index) => <Tag name={tag.toString()} />)
    }
  </div>

  <slot />
</header>

<style>
  header {
    position: relative;
    margin-bottom: var(--halfpad);
  }
  .heading {
    margin-bottom: -0.25rem;
  }

  img {
    padding: 1px;
    height: var(--huge-font);
    border-radius: var(--block-mark);
    transform: translate(0, 18%);
  }

  .title {
    font-size: var(--big-font);
    font-weight: 600;
    margin-bottom: -0.25rem;
  }

  .icons {
    display: flex;
    position: absolute;
    top: 0;
    right: 0;
    font-size: var(--huge-font);
  }

  .date {
  }

  .desc {
    font-size: var(--small-font);
    padding: var(--block-mark);
    padding-left: var(--halfpad);
    margin-bottom: var(--block-mark);
    margin-top: 0;
  }
  .tags {
    display: flex;
    margin: var(--halfpad);
    margin-bottom: 0;
    flex-wrap: wrap;
  }
</style>
