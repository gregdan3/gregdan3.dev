---
import { formatDate } from "@utils/utils";
export interface Props {
  date: Date;
  updated?: Date;
  showUpdated?: boolean;
  dateText?: string;
  updatedText?: string;
  tooltipSide?: "left" | "right";
}

const {
  date,
  updated,
  dateText = "Posted",
  updatedText = "Updated",
  tooltipSide = "left",
} = Astro.props;
let { showUpdated = false } = Astro.props;

if (!updated && showUpdated) {
  console.warn("showUpdated is set, but there is no updated date! Unsetting.");
  showUpdated = false;
}

let shownText = dateText;
let shownDate = date;

let tooltipText = updatedText;
let tooltipDate = updated;

if (showUpdated) {
  shownDate = updated!;
  shownText = updatedText;

  tooltipText = dateText;
  tooltipDate = date;
}
---

<span class="time">
  <time
    datetime={shownDate.toISOString()}
    title={tooltipDate ? `${tooltipText} ${formatDate(tooltipDate, 6)}` : ""}
    class={tooltipSide}
    >{shownText}
    <strong>{formatDate(shownDate, 6)}{tooltipDate ? "*" : ""}</strong></time
  >
</span>

<style>
  .time {
    color: var(--text-soft);
    font-size: var(--small-font);
    position: relative;
  }

  .right[title]:not([title=""]):hover::after {
    content: attr(title);

    background-color: var(--block-bg);
    color: var(--text);
    padding: var(--block-mark);
    box-shadow: var(--hover-shadow);
    border: 1px solid var(--border);
    border-radius: var(--block-mark);
    white-space: nowrap;
    position: absolute;
    margin-left: var(--halfpad);
  }
  .left[title]:not([title=""]):hover::before {
    content: attr(title);
    background-color: var(--block-bg);
    color: var(--text);
    padding: var(--block-mark);
    box-shadow: var(--hover-shadow);
    border: 1px solid var(--border);
    border-radius: var(--block-mark);
    white-space: nowrap;
    position: absolute;
    right: 100%;
    margin-right: var(--halfpad);
  }
</style>
